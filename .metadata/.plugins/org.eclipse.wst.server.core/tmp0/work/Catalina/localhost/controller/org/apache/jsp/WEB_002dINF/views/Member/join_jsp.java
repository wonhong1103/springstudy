/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-10-26 07:01:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.Member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("\r\n");
      out.write("<!-- 회원가입 css -->\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".join_in{width:100%; height:80%; padding-top: 5%; }\r\n");
      out.write("table {margin: 0px auto;width: 800px;border-collapse: collapse;font-size: 12pt;}\r\n");
      out.write("table, th, td {border: 1px solid black;text-align: center;}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- 회원가입 스크립트 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function join_ok(f) {\r\n");
      out.write("\t// 유효성 검사\r\n");
      out.write("\tfor (var i = 0; i < f.elements.length; i++) {\r\n");
      out.write("\t\tif(f.elements[i].value==\"\"){\r\n");
      out.write("\t\t\tif(i==2 || i==3) continue;  // 제외 시킬 때 사용 \r\n");
      out.write("\t\t\talert(f.elements[i].name+\"를 입력하세요\");\r\n");
      out.write("\t\t\tf.elements[i].focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tf.action = \"join_ok.do\";\r\n");
      out.write("\tf.submit();\r\n");
      out.write("\t/* if(f.m_pw.value = f.m_pwcheck.value){\r\n");
      out.write("\tf.action = \"join_ok.do\";\r\n");
      out.write("\tf.submit();\r\n");
      out.write("\t} else{\r\n");
      out.write("\t\talert(\"비밀번호가 일치하지 않습니다.\")\r\n");
      out.write("\t\tf.m_pw.value = \"\";\r\n");
      out.write("\t\tf.m_pw.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t} */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function login_go(f) {\r\n");
      out.write("\tlocation.href=\"loing.do\";\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../frame/header.jsp", out, false);
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 회원가입창 -->\r\n");
      out.write("\t<div class=\"join_in\">\r\n");
      out.write("\t\t<form method=\"post\">\r\n");
      out.write("\t\t\t<table class=\"join_w\">\r\n");
      out.write("\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th colspan=\"2\"><h2>회원가입</h2></th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t<tbody>\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>아이디</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"m_id\" placeholder=\"아이디를 입력하세요\"><input type=\"button\" value=\"중복확인\" style=\"width:100px;\" onclick=\"check_ok(this.form)\"></td>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"m_name\" placeholder=\"이름을 입력하세요\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>비밀번호</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"password\" name=\"m_pw\" placeholder=\"패스워드를 입력하세요\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>비밀번호 확인</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"password\" name=\"m_pwcheck\" placeholder=\"패스워드를 한번 더 입력하세요\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>e-mail</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"m_email\" placeholder=\"email을 입력하세요\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>주소</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" name=\"m_addr\" placeholder=\"주소를 입력하세요\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>연락처</th>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\"  name=\"m_phone\" placeholder=\"전화번호를 입력하세요\"></td>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</tr>\t\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t<tfoot>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\"><input type=\"reset\" value=\"취소\"> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"완료\" onclick=\"join_ok(this.form)\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</tfoot>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../frame/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
