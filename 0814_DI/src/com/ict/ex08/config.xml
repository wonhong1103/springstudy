<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 애노테이션 : 설정정보를 기본적으로는 xml로 작성하지만
		              자바코드에 직접 설정하여서 코딩을 좀 더 
		              쉽게 하는 방법을 얘기 한다.
		              
		 애노테이션은 자바코드에 주석을 달아 특별한 의미를 부여하는 것  
		 Spring 애노테이션의 종류
	
		 @Component : 클래스에 대해서 bean 인스턴스를 생성한다.
		 @Controller, @Service @Repository  
		     => 클래스에 대해서 bean 인스턴스를 생성한다.
		     @Component를 좀더 구체화 하여서 나타낸것
		     
		     @Service => 비즈니스로직 (모델)주로 사용
		     @Repository => 데이터베이스에 연동처리하는 DAO에 주로 사용
		     @Controller => MVC 패턴에서 컨트롤러 클래스를 객체로 만들때 사용
		     		 
		 @Autowired : autowired 를 지정할때 사용   
		             변수이름과 참조하는 bean객체의 id가 같을 때 사용
	  -->
	<!--
		애노테이션 설정 방법
		1. Namespaces에서 context 추가 
		2. <context:annotation-config /> 추가
		3. <context:component-scan base-package="애노테이션할 패키지지정"/> 추가
	    4. 해당 자바 클래스에서 애노테이션 표시
	  -->	
	  <context:annotation-config />
	  <context:component-scan base-package="com.ict.ex08" />
</beans>
